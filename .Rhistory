aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("Benchmark", x = min(combined$date), y = bench)
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark")
bench
plots[[k]] <- ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark")
p[[4]]
plots[[4]]
k
plots[[24]]
k <- 1
for (i in which(rowcount != 0)) {
bench <- benchmarks$MSBENCH[benchmarks$MSBANO == acc.numbers[i]]
new.existing <- status[[i]]$MSCOUNT[which(status[[i]]$MSTYPE == "ALLOC")]
dates <- status[[i]]$MSDATE[which(status[[i]]$MSTYPE == "ALLOC")]
new.ts <- ts(data = new.existing)
fit=Arima(new.ts,seasonal=list(order=c(0,1,0),period=30),include.drift=T)
ts.fc <- forecast(fit, h = 30)
combined <- data.frame(type = c(rep("observed", length(ts.fc[[7]])), rep("forecast", length(ts.fc[[4]]))) , value = c(ts.fc[[7]], ts.fc[[4]]))
new.dates <- dates
for ( i in (length(dates)+ 1):nrow(combined) ) {
new.dates[i] <- new.dates[i-1] + if(weekdays(new.dates[i-1]) == "Friday")  3 else 1
}
combined$date <- new.dates
combined$bench <- bench
ggplot(combined) + geom_line(aes(x = date, y = value, col = type))
plots[[k]] <- ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark")
k <- k + 1
}
plots[24]
plots[[4]]
?annotate
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", col = "red")
?text
?geom_text
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", col = "red", fontface = "bold")
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold")
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold")+
annotate("text", x = min(combined$date), y = as.numeric(quantile(combined$value, 0.95)), label = "95% percentile", fontface = "bold", col = "red")
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold")+
annotate("text", x = min(combined$date), y = as.numeric(quantile(combined$value, 0.95)), label = "95% percentile", fontface = "bold", col = "red",hjust = 1)
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold")+
annotate("text", x = min(combined$date), y = as.numeric(quantile(combined$value, 0.95)), label = "95% percentile", fontface = "bold", col = "red",hjust = 0)
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold", hjust = 0)+
annotate("text", x = min(combined$date), y = as.numeric(quantile(combined$value, 0.95)), label = "95% percentile", fontface = "bold", col = "red",hjust = 0)
k <- 1
for (i in which(rowcount != 0)) {
bench <- benchmarks$MSBENCH[benchmarks$MSBANO == acc.numbers[i]]
new.existing <- status[[i]]$MSCOUNT[which(status[[i]]$MSTYPE == "ALLOC")]
dates <- status[[i]]$MSDATE[which(status[[i]]$MSTYPE == "ALLOC")]
new.ts <- ts(data = new.existing)
fit=Arima(new.ts,seasonal=list(order=c(0,1,0),period=30),include.drift=T)
ts.fc <- forecast(fit, h = 30)
combined <- data.frame(type = c(rep("observed", length(ts.fc[[7]])), rep("forecast", length(ts.fc[[4]]))) , value = c(ts.fc[[7]], ts.fc[[4]]))
new.dates <- dates
for ( i in (length(dates)+ 1):nrow(combined) ) {
new.dates[i] <- new.dates[i-1] + if(weekdays(new.dates[i-1]) == "Friday")  3 else 1
}
combined$date <- new.dates
combined$bench <- bench
ggplot(combined) + geom_line(aes(x = date, y = value, col = type))
plots[[k]] <- ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.95)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold", hjust = 0)+
annotate("text", x = min(combined$date), y = as.numeric(quantile(combined$value, 0.95)), label = "95% percentile", fontface = "bold", col = "red",hjust = 0)
k <- k + 1
}
plots[[4]]
plots[[5]]
plots[[6]]
plots[[7]]
k <- 1
for (i in which(rowcount != 0)) {
bench <- benchmarks$MSBENCH[benchmarks$MSBANO == acc.numbers[i]]
new.existing <- status[[i]]$MSCOUNT[which(status[[i]]$MSTYPE == "ALLOC")]
dates <- status[[i]]$MSDATE[which(status[[i]]$MSTYPE == "ALLOC")]
new.ts <- ts(data = new.existing)
fit=Arima(new.ts,seasonal=list(order=c(0,1,0),period=30),include.drift=T)
ts.fc <- forecast(fit, h = 60)
combined <- data.frame(type = c(rep("observed", length(ts.fc[[7]])), rep("forecast", length(ts.fc[[4]]))) , value = c(ts.fc[[7]], ts.fc[[4]]))
new.dates <- dates
for ( i in (length(dates)+ 1):nrow(combined) ) {
new.dates[i] <- new.dates[i-1] + if(weekdays(new.dates[i-1]) == "Friday")  3 else 1
}
combined$date <- new.dates
combined$bench <- bench
ggplot(combined) + geom_line(aes(x = date, y = value, col = type))
plots[[k]] <- ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.9)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold", hjust = 0)+
annotate("text", x = min(combined$date), y = as.numeric(quantile(combined$value, 0.9)), label = "90% percentile", fontface = "bold",hjust = 0)
k <- k + 1
}
plots[[4]]
ggplot() +
geom_rect(data = combined, xmin = -Inf, xmax = Inf, ymin =  as.numeric(quantile(combined$value, 0.9)), ymax = Inf, fill = "#dc291e", alpha = .005, inherit.aes= F)+
geom_line(data = combined[combined$type == "observed",],
aes(x = date, y = value),
lwd= 1,
col = "#cd291e",
alpha = .8,
lty = "solid")+
geom_line(data = combined[combined$type == "forecast",],
aes(x = date, y = value),
lwd= 1,
col = "#003366",
alpha = .8,
lty = "solid")+
geom_line(data = combined, aes(x = date, y = bench), lwd= 1, lty = "dotted" )+
xlab("Red: Observed | Blue: Forecasted")+
ggtitle(paste("Account no: ",acc.numbers[i] , sep = ""))+
theme(axis.title.y = element_blank())+
annotate("text", x = min(combined$date), y = bench, label = "Benchmark", fontface = "bold", hjust = 0, fill = "black")+
annotate("text", x = min(combined$date), y = as.numeric(quantile(combined$value, 0.9)), label = "90% percentile", fontface = "bold",hjust = 0)
write.csv(eor, "eor.csv")
write.csv(benchmark, "bench.csv")
write.csv(benchmarks, "bench.csv")
april.tweets[,2]
april.tweets
april.tweets[40:50,2]
april.tweets <- df[which(df$TweetDate >= "2015-04-01"),]
require(twitteR)
require(plyr)
require(wordcloud)
require(tm)
all.tweets
setwd("C:/Users/anmarais/Desktop/GitHub/SATwitteR")
all.tweets <- readRDS("tweets.RDS")
k <- 1
# for (i in 1:nrow(t.handles)) {
for (i in 1:15) {
if (length(all.tweets[[i]]) > 1) {
user.tweets <- data.frame()
for (j in 1:length(all.tweets[[i]])) {
user.tweets[j,1] <- as.character(all.tweets[[i]][[j]]$screenName)
user.tweets[j,2] <- as.character(all.tweets[[i]][[j]]$text)
user.tweets[j,3] <- as.character(as.Date(all.tweets[[i]][[j]]$created))
}
combined.tweets[[k]] <- user.tweets
k <- k +1
}
}
df <- ldply(combined.tweets, data.frame)
colnames(df) <- c("ScreenName", "Tweet", "TweetDate")
#remove all direct tweets
df <- df[-which(as.character(gregexpr("@", df$Tweet)) != -1),]
all.tweets <- list()
user.tweets <- data.frame()
combined.tweets <- list()
k <- 1
# for (i in 1:nrow(t.handles)) {
for (i in 1:15) {
if (length(all.tweets[[i]]) > 1) {
user.tweets <- data.frame()
for (j in 1:length(all.tweets[[i]])) {
user.tweets[j,1] <- as.character(all.tweets[[i]][[j]]$screenName)
user.tweets[j,2] <- as.character(all.tweets[[i]][[j]]$text)
user.tweets[j,3] <- as.character(as.Date(all.tweets[[i]][[j]]$created))
}
combined.tweets[[k]] <- user.tweets
k <- k +1
}
}
df <- ldply(combined.tweets, data.frame)
colnames(df) <- c("ScreenName", "Tweet", "TweetDate")
#remove all direct tweets
df <- df[-which(as.character(gregexpr("@", df$Tweet)) != -1),]
df
k <- 1
# for (i in 1:nrow(t.handles)) {
for (i in 1:15) {
if (length(all.tweets[[i]]) > 1) {
user.tweets <- data.frame()
for (j in 1:length(all.tweets[[i]])) {
user.tweets[j,1] <- as.character(all.tweets[[i]][[j]]$screenName)
user.tweets[j,2] <- as.character(all.tweets[[i]][[j]]$text)
user.tweets[j,3] <- as.character(as.Date(all.tweets[[i]][[j]]$created))
}
combined.tweets[[k]] <- user.tweets
k <- k +1
}
}
all.tweets <- readRDS("tweets.RDS")
k <- 1
# for (i in 1:nrow(t.handles)) {
for (i in 1:15) {
if (length(all.tweets[[i]]) > 1) {
user.tweets <- data.frame()
for (j in 1:length(all.tweets[[i]])) {
user.tweets[j,1] <- as.character(all.tweets[[i]][[j]]$screenName)
user.tweets[j,2] <- as.character(all.tweets[[i]][[j]]$text)
user.tweets[j,3] <- as.character(as.Date(all.tweets[[i]][[j]]$created))
}
combined.tweets[[k]] <- user.tweets
k <- k +1
}
}
as.character(all.tweets[[i]][[j]]$screenName)
all.tweets
all.tweets[[1]][[1]]
all.tweets[[i]][[j]]$screenName
all.tweets[[1]][[2]]
as.character(all.tweets[[i]][[1]])
as.character(all.tweets[[i]][[2]])
k <- 1
# for (i in 1:nrow(t.handles)) {
for (i in 1:15) {
if (length(all.tweets[[i]]) > 1) {
user.tweets <- data.frame()
for (j in 1:length(all.tweets[[i]])) {
user.tweets[j,1] <- as.character(all.tweets[[i]][[1]])
user.tweets[j,2] <- as.character(all.tweets[[i]][[2]])
user.tweets[j,3] <- as.character(as.Date(all.tweets[[i]][[3]]))
}
combined.tweets[[k]] <- user.tweets
k <- k +1
}
}
combined.tweets
as.character(all.tweets[[i]][[1]])
user.tweets[,1] <- as.character(all.tweets[[i]][[1]])
i
as.character(all.tweets[[i]][1])
all.tweets[[i]][1]
all.tweets[[i]][[1]]
all.tweets[[i]][[1]][j]
k <- 1
# for (i in 1:nrow(t.handles)) {
for (i in 1:15) {
if (length(all.tweets[[i]]) > 1) {
user.tweets <- data.frame()
for (j in 1:length(all.tweets[[i]])) {
user.tweets[j,1] <- as.character(all.tweets[[i]][[1]][j])
user.tweets[j,2] <- as.character(all.tweets[[i]][[2]][j])
user.tweets[j,3] <- as.character(as.Date(all.tweets[[i]][[3]][j]))
}
combined.tweets[[k]] <- user.tweets
k <- k +1
}
}
df <- ldply(combined.tweets, data.frame)
head(df,5)
i
i <- 1
all.tweets[[i]]
ength(all.tweets[[i]])
length(all.tweets[[i]])
nrow(all.tweets[[i]]
)
k <- 1
# for (i in 1:nrow(t.handles)) {
for (i in 1:15) {
if (nrow(all.tweets[[i]]) > 1) {
user.tweets <- data.frame()
for (j in 1:nrow(all.tweets[[i]])) {
user.tweets[j,1] <- as.character(all.tweets[[i]][[1]][j])
user.tweets[j,2] <- as.character(all.tweets[[i]][[2]][j])
user.tweets[j,3] <- as.character(as.Date(all.tweets[[i]][[3]][j]))
}
combined.tweets[[k]] <- user.tweets
k <- k +1
}
}
df <- ldply(combined.tweets, data.frame)
head(df,10)
colnames(df) <- c("ScreenName", "Tweet", "TweetDate")
#remove all direct tweets
df <- df[-which(as.character(gregexpr("@", df$Tweet)) != -1),]
tweet.corpus <- Corpus(VectorSource(df$Tweet))
april.tweets <- df[which(df$TweetDate >= "2015-04-01"),]
april.tweets[40:50,2]
gregexpr("[^\w\*]", april.tweets[40:50,2])
gregexpr("�", april.tweets[40:50,2])
as.character(gregexpr("�", april.tweets[40:50,2]))
remove("�",april.tweets)
